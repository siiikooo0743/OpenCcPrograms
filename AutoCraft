--[[
	BuildPlatform
	
	Copyright (C) 2015,2016 siiikooo0743
	
	This programm is part of the OpenCcPrograms-project and licensed under the GPLv3, 
	see LicenseDetails for more details and LICENSE for the complete license.
	
	Author: siiikooo0743
	Website: https://github.com/siiikooo0743/OpenCcPrograms
	Version 1.4.5
	
	Whith this program a turtle builds a platform with the materail in his inventory.
	The first two arguments specifie the size of the platform.
]]

chest = peripheral.wrap("front")
os.loadAPI(".crafting/patterns")
reservedItems = {}

function getItems(items, amount)
  chest.condenseItems()
  for slot = 1, 9, 1 do    
    if items[slot] ~= nil then
      found = false
      while not found do
        allItems = chest.getAllStacks(false)
        for chestSlot, item in pairs(allItems) do
          if item["id"] == items[slot]  and item["qty"] >= amount then
            found = true
            tmpSlot = slot
            if slot > 3 then
              tmpSlot = tmpSlot + 1
            end
            
            if slot > 6 then
              tmpSlot = tmpSlot + 1
            end
            
            chest.pushItemIntoSlot("WEST",chestSlot,amount, slot)
            break
	        end
        end
        if(not found) then
          print("What? Hey! A item dissapeared! Missing " .. items[slot] .. ". I need " .. amount .. " of them!")
          sleep(10)
        end
      end
    end
  end
end

function findOrMakeItem(item, amount)
  while true do
  
    chest.condenseItems()
    allItems = chest.getAllStacks(false)
  
    need = amount
  
    --Check for reserved
    for resItem, resAmount in pairs(reservedItems) do
      if resItem == item then
        need = need + resAmount
      end
    end
    
  
    for chestSlot, chestItem in pairs(allItems) do
      if item["id"] == item  then
        need = need - item["qty"]
	    end
      
      if need <= 0 then
        reserved[item] = reserved[item] + amount
        return true
      end
    end
  
    recipe = patterns.getRecipe(item)
  
    if recipe ~= nil then
      for _,subItem in pairs(recipe) do
        findOrMakeItem(subItem, need)
      end
      
      getItems(recipe, need)
      turtle.select(16)
      turtle.craft()
      turtle.drop()
      
    end
  
    print("Missing " .. need .. " of ".. item .. "."
    
end


