--[[
	RunicAltarAutomation
	
	Copyright (C) 2015 siiikooo0743
	
	This programm is part of the OpenCcPrograms-project and licensed under the GPLv3, 
	see LicenseDetails for more details and LICENSE for the complete license.
	
	Author: siiikooo0743
	Website: https://github.com/siiikooo0743/OpenCcPrograms
	
	This program is designed to automate the Botania Runic Altar.
	It requires the StringApiExtend to be loaded(already os.loadAPI()).
	
	In World setup:
	
	A Runic Altar with an AirBlock above it and an Open Crate above that, a hopper facing into the Open Crate,
	a chest for all Items below and a turtle facing the altar below that.
	Additionaly a BC Gate set to Space for Mana and redstone-signale facing the altar and a redstone wire of kinds connecting it to the left of the turtle. 
	The turtle needs to have a wand of the forest.
	
	OC Ho
	Ai Ch -> that is looking at it from the side without the gatee
	RA Tu 
	
	Recipes go in the recipes folder and have the name of the item as their name.
	Their content contains the recipe.
	The file name is: The id, a ":" and the damageValue.
	Due to restrictions in computercraft every ":" needs to be replaced with "_", that includes any that may occur in the id.
	Each item is: The id, a ":", the damageValue, a "%", and the amount.
	The different Items seperated by ";".
	
	Example:
	
	"recipes/Botania_rune_8":
	"manaResource:0%5;manaResource:1%1;
	
]]

tArgs = {...}
chest = peripheral.wrap("top")
fs.makeDir("recipes")

function printUsage()
	print("Usage:")
	print("RAA help -> Print this help page.")
	print("RAA getName <slot> -> Print the name of the item in slot.")
	print("RAA addRecipe <slot_item> <slots_ingredients> -> Adds the recipe for item with ingredients, wich need to be in a table.")
	print("RAA run -> Runs the main program.")
end

function findItem(name)
 	
end

function main()

end

if(#tArgs < 1) then
	printUsage()
	return
end

if(tArgs[1] == "help") then
	printUsage()
	return
end

if(tArgs[1] == "getName") then
	if not (#tArgs == 2) then
		printUsage()
		return
	end
	stack = chest.getStackInSlot(tonumber(tArgs[2]))
	print(stack["id"] .. ":" .. stack["dmg"])
	return
end

if(tArgs[1] == "addRecipe") then
	if not (#tArgs == 3) then
		printUsage()
		return
	end
	stackI = chest.getStackInSlot(tonumber(tArgs[2]))
	name = "recipes/".. stackI["id"] .. ":" .. stackI["dmg"]
	name = string.gsub(name, ":", "_")
	file = fs.open(name , "w")
	text = ""
	
	for _,value in pairs(tArgs[3]) do
		text = text .. stackI["id"] .. ":" .. stackI["dmg"] .. "%" .. stackI["qty"] .. ";"
	end
	file.write(text)
	file.close()
end

if(tArgs[1] == "run") then
	main()
	return
end

printUsage()
