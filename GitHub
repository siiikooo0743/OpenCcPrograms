local function printUsage()
    print( "Usage:" )
    print( "GitHub clone <GitHub file> <filename>" )
    print( "->Clones the file)
    print( "GitHub update")
    print( "->Updates all files")
    print( "GitHub remove <file>")
    print( "->Removes file from update Function but not from Computer")
    print( "GitHub rep <GitHub repository>")
    print( "->Sets the repository")
end
     
local function getPath(sFile)
  file = fs.open(".GitHub/Rep")
  return("https://raw.github.com/" + file.readLine() + "/master/" + sFile)
end

local function setRep(sRep)
  fs.delete(".GitHub/Rep")
  fs.create(".GitHub/Rep")
  file = fs.open(".GitHub/Rep")
  file.writeLine(sRep)
end
     
local function getFile(sCode, sFile) 
	local sPath = shell.resolve( sFile )
	if fs.exists( sPath ) then
        fs.delete( sPath )
	end
    
	-- GET the contents from GitHub.com
	
	local response = http.get(getPath(sCode))
    
	if response then
                      
        local sResponse = response.readAll()
        response.close()
           
        local file = fs.open( sPath, "w" )
        file.write( sResponse )
        file.close()
           
        print( "Downloaded:"..sFile )
           
	else
        print( "Failed:"..sFile)
	end
		
end
	
local function update(name)
	file = fs.open(".GitHub/"..name, "r")
	code = file.readAll()
	file.close()
	getFile(code, name)
end 	
    
local tArgs = { ... }
    
if (#tArgs < 2) and not (tArgs[1] == "update") then
    printUsage()
    return
end
     
     
if not http then
    print( "GitHub requires http API" )
    print( "Set enableAPI_http to true in ComputerCraft.cfg" )
    return
end
     
fs.makeDir(".GitHub")
          
if(tArgs[1] == "update") then
	files = fs.list(".GitHub")
		
	for _, file in ipairs(files) do 
		update(file)
	end 
	
else 
	if(tArgs[1] == "remove") then
		fs.delete(".GitHub/"..tArgs[2])
	else
		-- Determine file to download
		local sCode = tArgs[1]
		local sFile = tArgs[2]
   
		print( "Connecting to GitHub.com... " )
		getFile(sCode, sFile)
		file = fs.open(".GitHub/"..sFile, "w")
		file.write(sCode)
		file.close()
	end	
end
