BEEF = 6
PORK = 5
CHIC = 4
BEEF_RAW = 3
PORK_RAW = 2
CHIC_RAW = 1

COW = 2
PIG = 1
CHI = 0

R_currOut = 0
L_currOut = 0

D_Chic = false
D_Pork = false
D_Beef = false

spawn = {}
spawn[0] = false
spawn[1] = false
spawn[2] = false
dumbA = {}
dumbA[0] = false
dumbA[1] = false
dumbA[2] = false
dumbA[3] = false
dumbA[4] = false
dumbA[5] = false
dumbA[6] = false


mon = peripheral.wrap("monitor_0")

--#########
function getColor(count)
  return(2 ^ count)
end


--AutoSpawner are inverted
--_a = animal; _b = bool(on/off)

function spawn(_a, _b)
  spawn[_a] = _b
  if(_b) then
    colors.subtract(L_currOut, getColor(_a))
  else
    colors.combine(L_currOut, getColor(_a))
  end
  rs.setBundledOutput("left", L_currOut)
end

--###########

--_m = MeetType

function getFillage(_m)
  return(colors.test(rs.getBundledInput("bottom"), getColor(_m)))
end

function dumb(_m)
  dumbA[_m] = true
  
  if(_m < 4) then
    dumbA[_m + 3] = false
  end
  if(_m > 3) then
    dumbA[_m - 3] = false
  end
  
  
  
  colors.combine(R_currOut, getColor(_m))
end

--###########

function checkRaw()
  spawn(COW, getFillage(BEEF_RAW))
  spawn(PIG, getFillage(PORK_RAW))
  spawn(CHI, getFillage(CHIC_RAW))
end

function checkNuggets()
  if not (getFillage(BEEF)) then
    dumb(BEEF_RAW)
    D_Beef = false
  else
    D_Beef = true
  end
  
  if not (getFillage(PORK)) then
    dumb(PORK_RAW)
    D_Pork = false
  else
    D_Pork = true
  end
  
  if not (getFillage(CHIC))then
    dumb(CHIC_RAW)
    D_Chic = false
  else
    D_Chic = true
  end
  
  if(D_Chic and D_Pork and D_Beef) then
    dumb(CHIC)
    dumb(PORK)
    dumb(BEEF)
  end
  
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  sleep(1)
  rs.setBundledOutput("rigth", R_currOut)
  sleep(1)
  rs.setBundledOutput("rigth", 0)
  
end
--###########
  function print(_text)
    mon.write(_text)
    mon.scroll(1)
  end
--###########
  function report()
    mon.clear()
    
    print("Spawning:")
    
    if(spawn[0]) then
      print("  Chicken");
    end
    if(spawn[1]) then
      print("  Pig");
    end
    if(spawn[2]) then
      print("  Cow");
    end
    
    print("")
    print("Pumping out:")
    
    if(dumbA[1]) then
      print("  Raw Chicken");
    end
    if(dumbA[2]) then
      print("  Raw Porkchop");
    end
    if(dumbA[3]) then
      print("  Raw Beef");
    end
    if(dumbA[4]) then
      print("  Ingredients");
    end
    
    print("")
    print("Ready for Pumpout:")
    
    if(D_Chic) then
      print("  Chicken Nuggets")
    end
    if(D_Pork) then
      print("  Pork Nuggets")
    end
    if(D_Beef) then
      print("  Beef Nuggets")
    end
    
  end
--###########

mon.setBackgroundColor(colors.black)
mon.setTextColor(colors.white)

while true do
  checkNuggets()
  checkRaw()
  
  
  sleep(60)
end
