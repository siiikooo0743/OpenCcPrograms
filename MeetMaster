BEEF = 8
PORK = 7
CHIC = 6
BEEF_RAW = 5
PORK_RAW = 4
CHIC_RAW = 3

COW = 2
PIG = 1
CHI = 0

R_currOut = 0

--#########
function getColor(count)
  return(2 ^ count)
end

--#########
R_off = {}
R_off[1] = 1
R_off[2] = 1
R_off[4] = 1

--AutoSpawner are inverted
--_a = animal; _B = bool(on/off)

function spawn(_a, _b)
  if(_b) then
    colors.subtract(r_currOut, getColor(_a))
    R_off[_a] = true
  else
    colors.combine(r_currOut, getColor(_a))
    R_off[_a] = false
  end
  
  rs.setBundledOutput("bottom", R_currOut)
end

--###########

--_m = MeetType

function getFillage(_m)
  colors.test(rs.getBundledInput("bottom"), getColor(_m))
end

--_c = count/amount

function dumb(_m, _c)
  rednet.send(_m, _c)
end

--###########

function checkRaw()
  spawn(COW, (getFillage(BEEF_RAW) < 128))
  spawn(PIG, (getFillage(PORK_RAW) < 128))
  spawn(CHI, (getFillage(CHIC_RAW) < 128))
end

function checkNuggets()
  c = 128 - getFillage(BEEF)
  if(c > 0)then
    dumb(BEEF_RAW, c)
  end
  
  c = 128 - getFillage(PORK)
  if(c > 0)then
    dumb(PORK_RAW, c)
  end
  
  c = 128 - getFillage(CHIC)
  if(c > 0)then
    dumb(CHIC_RAW, c)
  end
end

function checkLever()
  if(rs.getInput("top"))then
    dumb(BEEF, 8)
    dumb(PORK, 8)
    dumb(CHIC, 8)
  end
end


--###########

rednet.open("right")
while true do
  
  checkLever()
  checkNuggets()
  checkRaw()
  sleep(60)
end


