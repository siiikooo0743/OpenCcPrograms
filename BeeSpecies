-- beespecies library
-- Parts are part of "Forte40"s bee.lua
-- https://github.com/Forte40/bee

-- Forte40s Code From here
bees = {}

scoresFertility = {
  [1] = 0.1,
  [2] = 0.2,
  [3] = 0.3,
  [4] = 0.4
}
scoresSpeed = {
  ["0.3"] = 0.01,
  ["0.6"] = 0.02,
  ["0.8"] = 0.03,
  ["1"] = 0.04,
  ["1.2"] = 0.05,
  ["1.4"] = 0.06,
  ["1.7"] = 0.07
}
scoresAttrib = {
  diurnal =0.004,
  nocturnal =0.002,
  tolerantFlyer=0.001,
  caveDwelling =0.0001
}
scoresTolerance = {
  ["NONE"] = 0.00000,
  ["UP_1"] = 0.00001,
  ["UP_2"] = 0.00002,
  ["UP_3"] = 0.00003,
  ["DOWN_1"] = 0.00001,
  ["DOWN_2"] = 0.00002,
  ["DOWN_3"] = 0.00003,
  ["BOTH_1"] = 0.00002,
  ["BOTH_2"] = 0.00004,
  ["BOTH_3"] = 0.00006
}

function addParent(parent, offspring)
  if bees[parent] then
    bees[parent].mutateTo[offspring] = true
  else
    bees[parent] = {
      --name = parent,
      score = nil,
      mutateTo = {[offspring]=true},
      mutateFrom = {}
    }
  end
end

function addOffspring(offspring, parentss)
  if bees[offspring] then
    for i, parents in ipairs(parentss) do
      table.insert(bees[offspring].mutateFrom, parents)
    end
  else
    bees[offspring] = {
      score = nil,
      mutateTo = {},
      mutateFrom = parentss
    }
  end
  for i, parents in ipairs(parentss) do
    for i, parent in ipairs(parents) do
      addParent(parent, offspring)
    end
  end
end

function scoreBees()
  -- find all bees with no mutateFrom data
  local beeCount = 0
  local beeScore = 1
  for name, beeData in pairs(bees) do
    if #beeData.mutateFrom == 0 then
      beeData.score = beeScore
    else
      beeCount = beeCount + 1
    end
  end
  while beeCount > 0 do
    beeScore = beeScore * 4
    -- find all bees where all parent combos are scored
    for name, beeData in pairs(bees) do
      if not beeData.score then
        local scoreBee = true
        for i, beeParents in ipairs(beeData.mutateFrom) do
          local parent1 = bees[beeParents[1]]
          local parent2 = bees[beeParents[2]]

          if not parent1.score
              or parent1.score == beeScore
              or not parent2.score
              or parent2.score == beeScore then
            scoreBee = false
            break
          end
        end
        if scoreBee then
          beeData.score = beeScore
          beeCount = beeCount - 1
        end
      end
    end
  end
end

function choose(list, list2)
  local newList = {}
  if list2 then
    for i = 1, #list2 do
      for j = 1, #list do
        if list[j] ~= list[i] then
          table.insert(newList, {list[j], list2[i]})
        end
      end
    end
  else
    for i = 1, #list do
      for j = i, #list do
        if list[i] ~= list[j] then
          table.insert(newList, {list[i], list[j]})
        end
      end
    end
  end
  return newList
end

function load(extraBees, magicBees)
  
  -- Agrarian Branch
  addOffspring("Rural", {{"Diligent", "Meadows"}})
  addOffspring("Farmed", {{"Rural", "Cultivated"}})
  -- Apis Branch
  addOffspring("Common", choose({"Forest", "Meadows", "Modest", "Marbled", "Tropical", "Wintry", "Marshy", "Water", "Rocky", "Embittered", "Unusual", "Mystical", "Sorcerous", "Attuned"}))
  addOffspring("Cultivated", choose({"Common"}, {"Forest", "Meadows", "Modest", "Marbled", "Tropical", "Wintry", "Marshy", "Water", "Rocky", "Embittered", "Unusual", "Mystical", "Sorcerous", "Attuned"}))
  -- Austere Branch
  addOffspring("Frugal", {{"Sinister", "Modest"}, {"Fiendish", "Modest"}})
  addOffspring("Austere", {{"Frugal", "Modest"}})
  -- Beastly Branch
  addOffspring("Jaded", {{"Ender", "Relic"}})
  -- End Branch
  addOffspring("Spectral", {{"Hermitic", "Ender"}})
  addOffspring("Phantasmal", {{"Spectral", "Ender"}})
  -- Festive Branch
  addOffspring("Celebratory", {{"Austere", "Excited"}})
  addOffspring("Hazardous", {{"Austere", "Desolate"}})
  addOffspring("Leporine", {{"Meadows", "Forest"}})
  addOffspring("Merry", {{"Wintry", "Forest"}})
  addOffspring("Tipsy", {{"Wintry", "Meadows"}})
  -- Frozen Branch
  addOffspring("Icy", {{"Industrious", "Wintry"}})
  addOffspring("Glacial", {{"Icy", "Wintry"}})
  addOffspring("Frigid", {{"Diligent", "Wintry"}})
  addOffspring("Absolute", {{"Frigid", "Ocean"}})
  -- Heroic Branch
  addOffspring("Heroic", {{"Steadfast", "Valiant"}})
  -- Industrious Branch
  addOffspring("Diligent", {{"Cultivated", "Common"}})
  addOffspring("Unweary", {{"Diligent", "Cultivated"}})
  addOffspring("Industrious", {{"Unweary", "Diligent"}})
  -- Infernal Branch
  addOffspring("Sinister", {{"Cultivated", "Modest"}, {"Cultivated", "Tropical"}})
  addOffspring("Fiendish", {{"Sinister", "Cultivated"}, {"Sinister", "Modest"}, {"Sinister", "Tropical"}})
  addOffspring("Demonic", {{"Fiendish", "Sinister"}})
  -- Monastic Branch
  addOffspring("Secluded", {{"Monastic", "Austere"}})
  addOffspring("Hermitic", {{"Secluded", "Monastic"}})
  -- Noble Branch
  addOffspring("Noble", {{"Cultivated", "Common"}})
  addOffspring("Majestic", {{"Noble", "Cultivated"}})
  addOffspring("Imperial", {{"Majestic", "Noble"}})
  -- Tropical Branch
  addOffspring("Exotic", {{"Austere", "Tropical"}})
  addOffspring("Edenic", {{"Exotic", "Tropical"}})
  -- Vengeful Branch
  addOffspring("Vindictive", {{"Monastic", "Demonic"}})
  addOffspring("Vengeful", {{"Vindictive", "Demonic"}, {"Vindictive", "Monastic"}})
  addOffspring("Avenging", {{"Vengeful", "Vindictive"}})
  
  if(extraBees)
    -- Agricultural Branch
    addOffspring("Bovine", {{"Rural", "Water"}})
    addOffspring("Caffeinated", {{"Rural", "Tropical"}})
    addOffspring("Citrus", {{"Farmed", "Modest"}})
    addOffspring("Fermented", {{"Rural", "Fruity"}})
    addOffspring("Minty", {{"Farmed", "Tropical"}})
    -- Alloyed Branch
    addOffspring("Impregnable", {{"Resilient", "Noble"}})
    -- Aquatic Branch
    addOffspring("River", {{"Common", "Water"}})
    addOffspring("Ocean", {{"Diligent", "Water"}})
    addOffspring("Stained", {{"Ocean", "Ebony"}})
    -- Barren Branch
    addOffspring("Arid", {{"Meadows", "Modest"}})
    addOffspring("Barren", {{"Arid", "Common"}})
    addOffspring("Desolate", {{"Barren", "Arid"}})
    -- Boggy Branch
    addOffspring("Damp", {{"Common", "Marshy"}})
    addOffspring("Boggy", {{"Damp", "Marshy"}})
    addOffspring("Fungal", {{"Boggy", "Damp"}})
    -- Caustic Branch
    addOffspring("Corrosive", {{"Virulent", "Sticky"}})
    addOffspring("Caustic", {{"Corrosive", "Fiendish"}})
    addOffspring("Acidic", {{"Caustic", "Corrosive"}})
    -- Energetic Branch
    addOffspring("Excited", {{"Cultivated", "Valiant"}})
    addOffspring("Energetic", {{"Excited", "Valiant"}})
    addOffspring("Ecstatic", {{"Energetic", "Excited"}})
    -- Fossilized
    addOffspring("Fossiled", {{"Primeval", "Growing"}})
    addOffspring("Oily", {{"Primeval", "Ocean"}})
    addOffspring("Preserved", {{"Primeval", "Boggy"}})
    addOffspring("Resinous", {{"Primeval", "Fungal"}})
    -- Gemstone Branch
    addOffspring("Diamond", {{"Lapis", "Imperial"}})
    addOffspring("Emerald", {{"Lapis", "Noble"}})
    addOffspring("Ruby", {{"Emerald", "Austere"}})
    addOffspring("Sapphire", {{"Emerald", "Ocean"}})
    -- Historic Branch
    addOffspring("Ancient", {{"Noble", "Diligent"}})
    addOffspring("Primeval", {{"Ancient", "Noble"}})
    addOffspring("Prehistoric", {{"Primeval", "Majestic"}})
    addOffspring("Relic", {{"Prehistoric", "Imperial"}})
    -- Hostile Branch
    addOffspring("Skeletal", {{"Desolate", "Frugal"}})
    addOffspring("Decaying", {{"Desolate", "Modest"}})
    addOffspring("Creepy", {{"Desolate", "Austere"}})
    -- Metallic Branch
    addOffspring("Galvanized", {{"Tarnished", "Cultivated"}})
    addOffspring("Invincible", {{"Resilient", "Ender"}})
    addOffspring("Lustered", {{"Resilient", "Unweary"}})
    -- Nuclear Branch
    addOffspring("Unstable", {{"Austere", "Rocky"}})
    addOffspring("Nuclear", {{"Unstable", "Rusty"}})
    addOffspring("Radioactive", {{"Nuclear", "Glittering"}})
    -- Precious Branch
    addOffspring("Lapis", {{"Resilient", "Water"}})
    addOffspring("Glittering", {{"Corroded", "Imperial"}})
    addOffspring("Shining", {{"Rusty", "Imperial"}})
    addOffspring("Valuable", {{"Glittering", "Shining"}})
    -- Refined Branch
    addOffspring("Distilled", {{"Oily", "Industrious"}})
    addOffspring("Refined", {{"Distilled", "Oily"}})
    addOffspring("Elastic", {{"Refined", "Resinous"}})
    addOffspring("Tarry", {{"Refined", "Fossiled"}})
    -- Rocky Branch
    addOffspring("Tolerant", {{"Diligent", "Rocky"}})
    addOffspring("Robust", {{"Tolerant", "Rocky"}})
    addOffspring("Resilient", {{"Robust", "Imperial"}})
    -- Rusty Branch
    addOffspring("Corroded", {{"Resilient", "Forest"}})
    addOffspring("Leaden", {{"Resilient", "Unweary"}})
    addOffspring("Rusty", {{"Resilient", "Meadows"}})
    addOffspring("Tarnished", {{"Resilient", "Marshy"}})
    -- Saccharine Branch
    addOffspring("Sweetened", {{"Diligent", "Valiant"}})
    addOffspring("Sugary", {{"Sweetened", "Diligent"}})
    addOffspring("Fruity", {{"Ripening", "Rural"}})
    -- Shadow Branch
    addOffspring("Shadowed", {{"Tolerant", "Sinister"}})
    addOffspring("Darkened", {{"Shadowed", "Embittered"}})
    addOffspring("Abyssmal", {{"Darkened", "Shadowed"}})
    -- Virulent Branch
    addOffspring("Malicious", {{"Sinister", "Tropical"}})
    addOffspring("Infectious", {{"Malicious", "Tropical"}})
    addOffspring("Virulent", {{"Infectious", "Malicious"}})
    -- Viscous Branch
    addOffspring("Viscous", {{"Exotic", "Water"}})
    addOffspring("Glutinous", {{"Viscous", "Exotic"}})
    addOffspring("Sticky", {{"Glutinous", "Viscous"}})
    -- Volcanic Branch
    addOffspring("Furious", {{"Sinister", "Embittered"}})
    addOffspring("Volcanic", {{"Furious", "Embittered"}})
    addOffspring("Glowering", {{"Excited", "Furious"}})
    
    -- Primary Branch
    addOffspring("Bleached", {{"Wintry", "Valiant"}})
    addOffspring("Ebony", {{"Rocky", "Valiant"}})
    addOffspring("Maroon", {{"Forest", "Valiant"}})
    addOffspring("Natural", {{"Tropical", "Valiant"}})
    addOffspring("Prussian", {{"Water", "Valiant"}})
    addOffspring("Saffron", {{"Meadows", "Valiant"}})
    addOffspring("Sepia", {{"Marshy", "Valiant"}})
    -- Secondary Branch
    addOffspring("Amber", {{"Maroon", "Saffron"}})
    addOffspring("Azure", {{"Prussian", "Bleached"}})
    addOffspring("Indigo", {{"Maroon", "Prussian"}})
    addOffspring("Lavender", {{"Maroon", "Bleached"}})
    addOffspring("Lime", {{"Natural", "Bleached"}})
    addOffspring("Slate", {{"Ebony", "Bleached"}})
    addOffspring("Turquoise", {{"Natural", "Prussian"}})
    -- Tertiary Branch
    addOffspring("Ashen", {{"Slate", "Bleached"}})
    addOffspring("Fuchsia", {{"Indigo", "Lavender"}})
    
    -- no branch
    addOffspring("Gnawing", {{"Barren", "Forest"}})
    addOffspring("Decoposing", {{"Arid", "Common"}, {"Gnawing", "Common"}})
    addOffspring("Growing", {{"Diligent", "Forest"}})
    addOffspring("Thriving", {{"Growing", "Rural"}})
    addOffspring("Blooming", {{"Growing", "Thriving"}})
    addOffspring("Ripening", {{"Sugary", "Forest"}})


  end
  
  if(magicBees)
    -- Abominable Branch
    addOffspring("Hateful", {{"Eldritch", "Infernal"}})
    addOffspring("Spiteful", {{"Hateful", "Infernal"}})
    addOffspring("Withering", {{"Demonic", "Spiteful"}})
    -- Alchemical Branch
    addOffspring("Minium", {{"Eldritch", "Frugal"}})
    -- Arcane Branch
    addOffspring("Esoteric", {{"Eldritch", "Cultivated"}})
    addOffspring("Mysterious", {{"Eldritch", "Esoteric"}})
    addOffspring("Arcane", {{"Mysterious", "Esoteric"}})
    -- Aware Branch
    addOffspring("Ethereal", {{"Arcane", "Supernatural"}})
    addOffspring("Aware", {{"Ethereal", "Attuned"}})
    addOffspring("Watery", {{"Ethereal", "Supernatural"}})
    addOffspring("Windy", {{"Ethereal", "Supernatural"}})
    addOffspring("Firey", {{"Ethereal", "Supernatural"}})
    addOffspring("Earthen", {{"Ethereal", "Supernatural"}})
    -- Essential Branch
    addOffspring("Essence", {{"Arcane", "Ethereal"}})
    addOffspring("Arkanen", {{"Essence", "Ethereal"}})
    addOffspring("Quintessential", {{"Essence", "Arcane"}})
    addOffspring("Vortex", {{"Essence", "Skulking"}})
    addOffspring("Wight", {{"Ghastly", "Skulking"}})
    addOffspring("Luft", {{"Essence", "Windy"}})
    addOffspring("Blitz", {{"Luft", "Windy"}})
    addOffspring("Wasser", {{"Essence", "Watery"}})
    addOffspring("Eis", {{"Wasser", "Watery"}})
    addOffspring("Erde", {{"Essence", "Earthen"}})
    addOffspring("Staude", {{"Erde", "Earthen"}})
    addOffspring("Feuer", {{"Essence", "Firey"}})
    addOffspring("Magma", {{"Feuer", "Firey"}})
    -- Extrinsic
    addOffspring("Nameless", {{"Oblivion", "Ethereal"}})
    addOffspring("Abandoned", {{"Nameless", "Oblivion"}})
    addOffspring("Forlorn", {{"Abandoned", "Nameless"}})
    addOffspring("Draconic", {{"Abandoned", "Imperial"}})
    -- Fleshly Branch
    addOffspring("Poultry", {{"Skulking", "Common"}})
    addOffspring("Beefy", {{"Skulking", "Common"}})
    addOffspring("Porcine", {{"Skulking", "Common"}})
    -- Gem Branch
    addOffspring("Apatine", {{"Rural", "Cuprum"}})
    addOffspring("Diamandi", {{"Austere", "Auric"}})
    addOffspring("Esmeraldi", {{"Austere", "Argentum"}})
    -- Metallic2 Branch
    addOffspring("Cuprum", {{"Industrious", "Meadows"}})
    addOffspring("Stannum", {{"Industrious", "Forest"}})
    addOffspring("Aluminum", {{"Industrious", "Cultivated"}})
    addOffspring("Ardite", {{"Industrious", "Infernal"}})
    addOffspring("Argentum", {{"Imperial", "Modest"}})
    addOffspring("Cobalt", {{"Imperial", "Infernal"}})
    addOffspring("Ferrous", {{"Common", "Industrious"}})
    addOffspring("Plumbum", {{"Stannum", "Common"}})
    addOffspring("Auric", {{"Minium", "Plumbum"}})
    addOffspring("Manyullyn", {{"Ardite", "Cobalt"}})
    -- Scholarly Branch
    addOffspring("Pupil", {{"Arcane", "Monastic"}})
    addOffspring("Scholarly", {{"Arcane", "Pupil"}})
    addOffspring("Savant", {{"Scholarly", "Pupil"}})
    -- Skulking Branch
    addOffspring("Skulking", {{"Eldritch", "Modest"}})
    addOffspring("Ghastly", {{"Skulking", "Ethereal"}})
    addOffspring("Smouldering", {{"Skulking", "Hateful"}})
    addOffspring("Spidery", {{"Skulking", "Tropical"}})
    -- Soulful Branch
    addOffspring("Spirit", {{"Ethereal", "Aware"}, {"Attuned", "Aware"}})
    addOffspring("Soul", {{"Spirit", "Aware"}})
    -- Supernatural Branch
    addOffspring("Charmed", {{"Eldritch", "Cultivated"}})
    addOffspring("Enchanted", {{"Eldritch", "Charmed"}})
    addOffspring("Supernatural", {{"Enchanted", "Charmed"}})
    -- Thaumic Branch
    addOffspring("Aqua", {{"Watery", "Watery"}})
    addOffspring("Aura", {{"Windy", "Windy"}})
    addOffspring("Ignis", {{"Firey", "Firey"}})
    addOffspring("Praecantatio", {{"Ethereal", "Ethereal"}})
    addOffspring("Solum", {{"Earthen", "Earthen"}})
    addOffspring("Stark", choose({"Earthen", "Firey", "Watery", "Windy"}))
    addOffspring("Vis", {{"Eldritch", "Ethereal"}})
    addOffspring("Flux", {{"Vis", "Demonic"}})
    addOffspring("Attractive", {{"Vis", "Flux"}})
    addOffspring("Rejuvenating", {{"Vis", "Imperial"}})
    addOffspring("Pure", {{"Vis", "Rejuvenating"}})
    addOffspring("Batty", {{"Skulking", "Windy"}})
    addOffspring("Brainy", {{"Skulking", "Pupil"}})
    addOffspring("Wispy", {{"Ethereal", "Ghastly"}})
    -- Time Branch
    addOffspring("Timely", {{"Ethereal", "Imperial"}})
    addOffspring("Lordly", {{"Timely", "Imperial"}})
    addOffspring("Doctoral", {{"Lordly", "Timely"}})
    -- Veiled Branch
    addOffspring("Eldritch", {{"Mystical", "Cultivated"}, {"Sorcerous", "Cultivated"}, {"Unusual", "Cultivated"}, {"Attuned", "Cultivated"}})
    

  end
  
  scoreBees()
end

--To here

function getRecipe(species)
  beeSpecies = bees[species]
  return beeSpecies[mutateFrom]
end

function getBest(drones)
  local score
  local maxScore = 0
  local maxScoreKey
  for i=0, table.getn(drones), 1 do
    drone = drones[tostring(i)]
    score = scoresFertility[drone["fertility"]]
    score = score + scoresSpeed[tostring(drone["speed"])]
    score = score + scoresTolerance[drone["toleranceTemerature"]]
    score = score + scoresTolerance[drone["toleranceHumidity"]]
    
    if score > maxScore then
      maxScore = score
      maxScoreKey = tostring(i)
    end

  end

  return(maxScoreKey)
end
