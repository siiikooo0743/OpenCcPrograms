--[[
	ReactorEntryControl
	
	Copyright (C) 2016 siiikooo0743
	
	This is used to control who can enter a reactor area. only with hazmat suite alowed.
  You can switch your armor using the Pim above the turtle.
	
  Version 0.2.2
  
	Author: siiikooo0743
	Website: https://github.com/siiikooo0743/OpenCcPrograms
]]
pim = peripheral.wrap("top")
scanner = peripheral.wrap("bottom")

function calcRealSlot(armorSlot)
  return (1 + ((armorSlot -1) * 4))
end

function isHazmat(slot)
  item = turtle.getItemDetail(calcRealSlot(slot))
  if item == nil then
    return false
  end
  
  return (item["name"] == "IC2:itemArmorHazmatHelmet")
end

function findSlot()
  for i = 1, 4, 1 do
    file = fs.open(".slots/" .. i, "r")
    p = file.readLine()
    file.close()
    if p == "" then
      return i
    end
  end

  for i = 1, 4, 1 do
    if isHazmat(i) then
      return i
    end
  end
  return -1 
end

function getSlotOfPlayer(player)
  for i = 1, 4, 1 do
    file = fs.open(".slots/" .. i, "r")
    p = file.readLine()
    file.close()
    if p == player then
      return i
    end
  end
  return -1
end
pimCd = 0

while true do
  players = scanner.getPlayers()
  open = false
  notOpen = false
 
  if pimCd > 0 then
   pimCd = pimCd - 1
  end
 
  for key,player in pairs(players) do
    slot = getSlotOfPlayer(player['uuid'])

    if slot == -1 then
      slot = findSlot()
      if slot == -1 then
        notOpen = true
      else
        file = fs.open(".slots/" .. slot, "w")
        p = file.writeLine(player['uuid'])
        file.close()
      end
    end
    
    if (slot > 0) and not isHazmat(slot) then
      open = true
    else
      notOpen = true
    end
  end
  
  if open and (not notOpen) then
    redstone.setOutput("right", true)
  else
    redstone.setOutput("right", false)
  end
  
  if pim.getInventorySize() > 0 and pimCd == 0 then
    for key,player in pairs(players) do
      if player["name"] == pim.getInventoryName() then
        slot = getSlotOfPlayer(player['uuid'])
	
	      --Helmet
	      pim.pushItemIntoSlot("down", 40, 1, 16)
	      pim.pullItemIntoSlot("down", slot, 1, 40)
	
	      --Chest
	      pim.pushItemIntoSlot("down", 39, 1, slot)
	      pim.pullItemIntoSlot("down", slot + 1, 1, 39)
	
	      --Legs
	      pim.pushItemIntoSlot("down", 38, 1, slot + 1)
	      pim.pullItemIntoSlot("down", slot + 2, 1, 38)
	
	      --shoes
	      pim.pushItemIntoSlot("down", 37, 1, slot + 2)	
	      pim.pullItemIntoSlot("down", slot + 3, 1, 37)

        --Return to correct slot
        turtle.select(slot+2)
	      turtle.transferTo(slot+3)
        
        turtle.select(slot+1)
	      turtle.transferTo(slot+2)
        
        turtle.select(slot)
	      turtle.transferTo(slot+1)
  
	      turtle.select(16)
	      turtle.transferTo(slot)
        
	      pimCd = 50
	      sleep(0.5)
      end
    end
  end
  
  
  
  
end

